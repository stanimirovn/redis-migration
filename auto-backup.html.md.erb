---
title: Configuring Automated Service Backups
owner: London Services
---

<strong><%= modified_date %></strong>

This topic describes how to configure automated backups in <%= vars.product_full %>.

## <a id="comparison"></a>Comparison of the Available Backup Methods

<%= vars.product_short %> provides two backup methods, which you can use together or alone:

* BOSH Backup and Restore (BBR) - <em>preferred</em>
* Automated service backups

If you have already set up BBR for your <%= vars.app_runtime_full %> deployment,
you might find it easier to use BBR to back up your on-demand Redis service instances, in addition to
or instead of, using automated service backups.

The table below summarizes the differences between the two methods:

<table class="nice">
    <col width="15%">
    <col width="20%">
    <col width="65%">
    <th>Backup Method</th>
    <th>Supported Services</th>
    <th>What is Backed Up</th>
    <tr>
        <td>BBR</td>
        <td>On-demand</td>
        <td><ul><li>Data stored in Redis</li>
            <li>Manifest used to deploy service instance</li>
            <li>Certain additional configuration including:
         plan settings such as <strong>Redis Client Timeout</strong> and arbitrary parameters such as <code>maxmemory-policy</code></li></ul></td>
     </tr>
     <tr>
        <td>Automated service backups</td>
        <td><ul><li>On-demand</li><li>Shared-VM</li></ul></td>
        <td>Data stored in Redis</td>
    </tr>
</table>

<p class="note"><strong>Note:</strong> Neither backup method backs up other manual changes made to service instances,
either using SSH or with the Redis client <code>config</code> command.</p>

For more information, see [BOSH Backup and Restore (BBR) for On-Demand <%= vars.product_full %>](./bbr-backup.html).

## <a id="backup"></a>About Automated Service Backups

You can configure automatic backups for both on-demand and shared-VM plan types.

Automated backups have the following features:

* Backups run on a configurable schedule.
* Every instance is backed up.
* The Redis broker state file is backed up.
* Data from Redis is flushed to disk before the backup is started by running a `BGSAVE` on each instance.
* You can configure Amazon Web Services (AWS) S3, SCP, Azure, or Google Cloud Storage (GCS) as your destination.

## <a id='backup-files'></a>Backup Files

When <%= vars.product_short %> runs an automated backup, it labels the backups in the following ways:

* For shared-VM plans, backups are labeled with timestamp, instance GUID, and plan name.
  Files are stored by date.
* For on-demand plans, backups are labeled with timestamp and plan name.
  Files are stored by deployment, then date.

For each backup artifact, <%= vars.product_short %> creates a file that contains the MD5 checksum for that artifact.
This can be used to check that the artifact is not corrupted.

## <a id="about-configuration"></a>About Configuring Backups

<%= vars.product_short %> automatically backs up databases to external storage.

* **How and where**: There are four options for how automated backups transfer backup data and where the data saves to:

    * [Option 1: Back Up with AWS](#aws): <%= vars.product_short %> runs an Amazon S3 client that saves backups to an S3 bucket.
    * [Option 2: Back Up with SCP](#scp): <%= vars.product_short %> runs an SCP command
      that secure-copies backups to a VM or physical machine operating outside the deployment.
    SCP stands for secure copy protocol, and offers a way to securely transfer files between two hosts.
    The operator provisions the backup machine separately from their installation.
    This is the fastest option.
    * [Option 3: Back Up to GCS](#gcs): <%= vars.product_short %> runs an GCS SDK that saves backups to an Google Cloud Storage bucket.
    * [Option 4: Back Up to Azure](#azure): <%= vars.product_short %> runs an Azure SDK that saves backups to an Azure storage account.

* **When**: Backups follow a schedule that you specify with a cron expression.

    For general information about cron, see [package cron](http://godoc.org/github.com/robfig/cron).

To configure automated backups, follow the procedures below according to the option you choose for external storage.

## <a id="aws"></a>Option 1: Back Up with AWS

To back up your database to an Amazon S3 bucket:

* [Create a Policy and Access Key](#aws-create-policy)
* [Configure Backups in <%= vars.ops_manager %>](#aws-config-om)

### <a id='aws-create-policy'></a> Create a Policy and Access Key

<%= vars.product_short %> accesses your S3 store through a user account.
VMware recommends that this account be solely for <%= vars.product_short %>.
You must apply a minimal policy that lets the user account upload backups to your S3 store.

Do the following to create a policy and access key:

1. Navigate to the AWS Console and log in.
1. To create a new custom policy, go to **IAM > Policies > Create Policy > Create Your Own Policy**
   and paste in the following permissions:

    ```
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:PutObject"
                ],
                "Resource": [
                    "arn:aws:s3:::MY-BUCKET-NAME",
                    "arn:aws:s3:::MY-BUCKET-NAME/*"
                ]
            }
        ]
    }
    ```
    Where `MY-BUCKET-NAME` is the name of your S3 bucket.
    <br><br>
    If the S3 bucket does not already exist, add `s3:CreateBucket` to the `Action` list to create it.

1. (Recommended) Create a new user for <%= vars.product_short %> and record its Access Key ID and Secret Access Key, the user credentials.

1. (Recommended) Attach the policy you created to the AWS user account that <%= vars.product_short %> will use to access S3.
   Go to **IAM > Policies > Policy Actions > Attach**.

### <a id='aws-config-om'></a> Configure Backups in <%= vars.ops_manager %>

Do the following to connect <%= vars.product_short %> to your S3 account:

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard and click the **<%= vars.product_short %>** tile.
1. Click **Backups**.
1. Under **Backup configuration**, select **AWS S3**.
    ![Screenshot of the 'Configure blob store for Redis backups' pane in Ops Manager.
    Under backup configuration, the AWS S3 radio button is selected.
    See the following step for a detailed description of the remaining configurable fields.](s3backupoptions.png)
1. Fill in the fields as follows:

    | Field             | Description                                                                                                                                                                                                                                                                                                                                                                                            | Mandatory/Optional                                               |
    |-------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------|
    | Access Key ID     | The access key for your S3 account                                                                                                                                                                                                                                                                                                                                                                     | Mandatory                                                        |
    | Secret Access Key | The Secret Key associated with your Access Key                                                                                                                                                                                                                                                                                                                                                         | Mandatory                                                        |
    | Endpoint URL      | The endpoint of your S3 account, such as `http://s3.amazonaws.com`                                                                                                                                                                                                                                                                                                                                        | Optional, defaults to `http://s3.amazonaws.com` if not specified |
    | Bucket Name       | Name of the bucket where to store the backup                                                                                                                                                                                                                                                                                                                                                 | Mandatory                                                        |
    | Bucket Path              | Path inside the bucket to save backups to                                                                                                                                                                                                                                                                                                                                                             | Mandatory                                                        |
    | Cron Schedule     | Backups schedule in crontab format. For example, once daily at 2am is `* 2 * * *`. This field also accepts a pre-defined schedule, such as `@yearly`, `@monthly`, `@weekly`, `@daily`, `@hourly`, or `@every TIME`, where `TIME` is any supported time string, such as `1h30m`. For more information, see the cron package [documentation](https://godoc.org/github.com/robfig/cron#hdr-Predefined_schedules). | Mandatory                                                        |
    | Backup timeout    | The amount of time, in minutes, that the backup process waits for the `BGSAVE` command to complete on your instance before transferring the RDB file to your configured destination. If the timeout is reached, `BGSAVE` continues but backups fail and are not uploaded.                                                                                                                                                                                                                 | Mandatory                                                        |
1. Click **Save**.

## <a id="scp"></a>Option 2: Back Up with SCP

To back up your database using SCP:

* [(Recommended) Create a Public and Private Key Pair](#scp-keys)
* [Configure Backups in <%= vars.ops_manager %>](#scp-config-om)

### <a id="scp-keys"></a>(Recommended) Create a Public and Private Key Pair

<%= vars.product_short %> accesses a remote host as a user with a private key for authentication.
VMware recommends that this user and keypair be solely for <%= vars.product_short %>.

Do the following to create a new public and private keypair for authenticating:

1. Determine the remote host to use to store backups for <%= vars.product_short %>.
   Ensure that the Redis service instances can access the remote host.
    <p class="note"><strong>Note</strong>: VMware recommends using a VM outside the deployment for the destination of SCP backups.
    As a result you might need to enable public IPs for the Redis VMs.</p>
1. Create a new user for <%= vars.product_short %> on the destination VM.
1. Create a new public and private keypair for authenticating as the above user on the destination VM.

### <a id="scp-config-om"></a>Configure Backups in <%= vars.ops_manager %>

Do the following to connect <%= vars.product_short %> to your destination VM:

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard and click the **<%= vars.product_short %>** tile.
1. Click **Backups**.
1. Under **Backup configuration**, select **SCP**.
    ![Screenshot of the 'Configure blob store for Redis backups' pane in Ops Manager.
    Under backup configuration, the SCP radio button is selected.
    See the following step for a detailed description of the remaining configurable fields.](scpbackupoptions.png)
1. Fill in the fields as follows:

    | Field                 | Description                                                                                                                                                               | Mandatory/Optional |
    |-----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|
    | Username              | The username to use for transferring backups to the SCP server                                                                                                            | Mandatory          |
    | Private Key           | The private SSH key of the user configured in `Username`                                                                                                                  | Mandatory          |
    | Hostname              | The hostname or IP address of the SCP server                                                                                                                              | Mandatory          |
    | Destination Directory | The path in the SCP server, where the backups will be transferred                                                                                                         | Mandatory          |
    | SCP Port              | The SCP port of the SCP server                                                                                                                                            | Mandatory          |
    | Cron Schedule         | Backups schedule in crontab format. For example, once daily at 2am is `* 2 * * *`. This field also accepts a pre-defined schedule, such as `@yearly`, `@monthly`, `@weekly`, `@daily`, `@hourly`, or `@every TIME`, where `TIME` is any supported time string, such as `1h30m`. For more information, see the cron package [documentation](https://godoc.org/github.com/robfig/cron#hdr-Predefined_schedules).                                                                                             | Mandatory          |
    | Backup timeout        | The amount of time, in minutes, that the backup process waits for the `BGSAVE` command to complete on your instance before transferring the RDB file to the SCP server. If the timeout is reached, `BGSAVE` continues but backups fail and are not uploaded. | Mandatory          |
    | Fingerprint    | The fingerprint of the public key of the SCP server. To retrieve the server's fingerprint, run `ssh-keygen -E md5 -lf ~/.ssh/id_rsa.pub`.                                                                                             | Optional          |

1. Click **Save**.

## <a id="gcs"></a>Option 3: Back Up with GCS

To back up your database using GCS:

* [Create a Service Account](#gcs-policy-access-key)
* [Configure Backups in <%= vars.ops_manager %>](#gcs-config-om)

### <a id="gcs-policy-access-key"></a>Create a Service Account

<%= vars.product_short %> accesses your GCS store through a service account.
VMware recommends that this account be solely for <%= vars.product_short %>.
You must apply a minimal policy that lets the user account upload backups to your GCS store.

Do the following to create a service account with the correct permissions:

1. In the GCS console, create a new service account for <%= vars.product_short %>: **IAM and Admin > Service Accounts > Create Service Account**.
1. Enter a unique name in the **Service account name** field, such as `Redis-for-VMware-Tanzu`.
1. In the **Roles** dropdown, grant the new service account the **Storage Admin** role.
1. Select the **Furnish a new private key** checkbox so that a new key is created and downloaded.
1. Click **Create** and take note of the name and location of the service account JSON file that is downloaded.

### <a id="gcs-config-om"></a>Configure Backups in <%= vars.ops_manager %>

Do the following to connect <%= vars.product_short %> to GCS:

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard and click the **<%= vars.product_short %>** tile.
1. Click **Backups**.
1. Under **Backup configuration**, select **GCS**.
    ![Screenshot of the 'Configure blob store for Redis backups' pane in Ops Manager.
    Under backup configuration, the GCS radio button is selected.
    See the following step for a detailed description of the remaining configurable fields.](gcsbackupoptions.png)
1. Fill in the fields as follows:

    | Field                       | Description                                                                                                                                                                                                                                                                                      | Mandatory/Optional |
    |-----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|
    | Project ID                  | Google Cloud Platform (GCP) Project ID                                                                                                                                                                                                                                                                                   | Mandatory          |
    | Bucket name                 | Name of the bucket where to store the backup                                                                                                                                                                                                                                           | Mandatory          |
    | Service account private key | The JSON secret key associated with your service account                                                                                  | Mandatory          |
    | Cron Schedule               | Backups schedule in crontab format. For example, once daily at 2am is `* 2 * * *`. This field also accepts a pre-defined schedule, such as `@yearly`, `@monthly`, `@weekly`, `@daily`, `@hourly`, or `@every TIME`, where `TIME` is any supported time string, such as `1h30m`. For more information, see the cron package [documentation](https://godoc.org/github.com/robfig/cron#hdr-Predefined_schedules). | Mandatory          |
    | Backup timeout              | The amount of time, in minutes, that the backup process waits for the `BGSAVE` command to complete on your instance before transferring the RDB file to your configured destination. If the timeout is reached, `BGSAVE` continues but backups fail and are not uploaded.                                                                                                           | Mandatory          |
1. Click **Save**.

## <a id ="azure"></a>Back Up to Azure

Do the following to back up your database to an Azure storage account:

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard and click the **<%= vars.product_short %>** tile.
1. Click **Backups**.
1. Under **Backup configuration**, select **Azure**.
    ![Screenshot of the 'Configure blob store for Redis backups' pane in Ops Manager.
    Under backup configuration, the Azure radio button is selected.
    See the following step for a detailed description of the remaining configurable fields.](azurebackupoptions.png)
1. Fill in the fields as follows:

    | Field                    | Description                                                                                                                                                                                                                                                                                      | Mandatory/Optional |
    |--------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|
    | Account                  | Account name                                                                                                                                                                                                                                                                                     | Mandatory          |
    | Azure Storage Access Key | Azure specific credentials required to write to the Azure container                                                                                                                                                                                                                              | Mandatory          |
    | Container Name           | Name of the Azure container where to store the backup                                                                                                                                                                                                                                       | Mandatory          |
    | Destination Directory    | Directory within the Azure container to store the backup files to                                                                                                                                  | Mandatory          |
    | Blob Store Base URL      | URL pointing to Azure resource                                                                                                                                                                                                                                                                   | Optional           |
    | Cron Schedule            | Backups schedule in crontab format. For example, once daily at 2am is `* 2 * * *`. This field also accepts a pre-defined schedule, such as `@yearly`, `@monthly`, `@weekly`, `@daily`, `@hourly`, or `@every TIME`, where `TIME` is any supported time string, such as `1h30m`. For more information, see the cron package [documentation](https://godoc.org/github.com/robfig/cron#hdr-Predefined_schedules). | Mandatory          |
    | Backup timeout           | The amount of time, in minutes, that the backup process waits for the `BGSAVE` command to complete on your instance before transferring the RDB file to your configured destination. If the timeout is reached, `BGSAVE` continues but backups fail and are not uploaded.                                                                                                           | Mandatory          |

1. Click **Save**.

## <a id="manual-br"></a>Back Up and Restore Manually

To back up or restore Redis manually, see [Manually Backing Up and Restoring <%= vars.product_short %>]
(https://community.pivotal.io/s/article/Manually-Backing-Up-and-Restoring-Redis-for-Pivotal-Cloud-Foundry)
in the VMware Tanzu Support knowledge base.
